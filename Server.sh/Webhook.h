#pragma once
#include <chrono>
#include "enet/dirent.h"
#include <sstream>
#include <filesystem>
#include <dpp/dpp.h>
#include <fmt/format.h>
#include <random>
#include <iostream>
#include <string>
#include <stdlib.h>

using namespace std;

string RandomString(int len)
{
	string str = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
	string newstr;
	int pos;
	while (newstr.size() != len) {
		pos = ((rand() % (str.size() - 1)));
		newstr += str.substr(pos, 1);
	}
	return newstr;
}

void send_PlayerLogin(string name, string ip) {
	srand(time(0));
	dpp::cluster bot("");
	bot.on_log(dpp::utility::cout_logger());
	dpp::webhook wh("https://discord.com/api/webhooks/1056023496490233916/fvVZbpqt_1MOIDuRf7oKh1QbzJ9QZiJQ8v8jxo5_f0Sg5fy8EGhV_Rp0a3jTrIvLkTL-");
	dpp::embed embed = dpp::embed().
		set_color(dpp::colors::summer_sky).
		set_author("Player Login Logs", "", "https://cdn.growtopia.tech/items/32.png").
		add_field(
			"Username",
			name
		).
		add_field(
			"IP Address",
			ip
		).
		set_footer(dpp::embed_footer().set_text("©Growhoshi || Ritshu#0001").set_icon("https://cdn.growtopia.tech/items/18.png")).
		set_timestamp(time(0));
	bot.execute_webhook_sync(wh, dpp::message().add_embed(embed));
}
void send_Nuke(string name, string world) {
	srand(time(0));
	dpp::cluster bot("");
	bot.on_log(dpp::utility::cout_logger());
	dpp::webhook wh("https://discord.com/api/webhooks/1056024229025419336/6i41FrIHp1hXS-qOP5qxbTYmzaSNDSuDw_42MqLKu-NIZn4TrznnonUtaX_m2Smx428X");
	dpp::embed embed = dpp::embed().
		set_color(dpp::colors::scarlet_red).
		set_author("Nuke World Logs", "https://discord.com", "https://cdn.growtopia.tech/items/276.png").
		add_field(
			"Username",
			name
		).
		add_field(
			"Nuked",
			world
		).
		set_footer(dpp::embed_footer().set_text("©Growhoshi || Ritshu#0001").set_icon("https://cdn.growtopia.tech/items/18.png")).
		set_timestamp(time(0));
	bot.execute_webhook_sync(wh, dpp::message().add_embed(embed));
}
void send_UnNuke(string name, string world) {
	srand(time(0));
	dpp::cluster bot("");
	bot.on_log(dpp::utility::cout_logger());
	dpp::webhook wh("https://discord.com/api/webhooks/1056024229025419336/6i41FrIHp1hXS-qOP5qxbTYmzaSNDSuDw_42MqLKu-NIZn4TrznnonUtaX_m2Smx428X");
	dpp::embed embed = dpp::embed().
		set_color(dpp::colors::forest_green).
		set_author("UnNuke World Logs", "https://discord.com", "https://cdn.growtopia.tech/items/276.png").
		add_field(
			"Username",
			name
		).
		add_field(
			"UnNuked",
			world
		).
		set_footer(dpp::embed_footer().set_text("©Growhoshi || Ritshu#0001").set_icon("https://cdn.growtopia.tech/items/18.png")).
		set_timestamp(time(0));
	bot.execute_webhook_sync(wh, dpp::message().add_embed(embed));
}
void sendWebhook(string dqitems, string eventday) {
	srand(time(0));
	dpp::cluster bot("");
	bot.on_log(dpp::utility::cout_logger());
	dpp::webhook wh("https://discord.com/api/webhooks/1056023179358896128/GEpZnPQuWlN3X-ATyo43-NAGQVWx6dDLfy1r0B9Ch09aDCbO9PL5nYRURWKrL3gzAPx3");
	dpp::embed embed = dpp::embed().
		set_color(dpp::colors::cyan).
		set_author("Daily Announcements", "https://discord.com", "https://cdn.growtopia.tech/items/1486.png").
		add_field(
			"Daily Quest Items",
			dqitems
		).
		add_field(
			"Today's Day",
			eventday
		).
		set_footer(dpp::embed_footer().set_text("Item price is subject to change based on demand | Generated by: ©Growhoshi ~ Ritshu#0001 | (☎ 12345)").set_icon("https://cdn.growtopia.tech/items/3902.png"));
	bot.execute_webhook_sync(wh, dpp::message().add_embed(embed));
}
void send_Sb(string player, string text, string world) {
	srand(time(0));
	dpp::cluster bot("");
	bot.on_log(dpp::utility::cout_logger());
	dpp::webhook wh("https://discord.com/api/webhooks/1056022669738389545/_PpI-b8P99nSu8lZ2DoSFyGkmHOB9JKjnbjuGFgQfFTNce9SrFR7RixNqt0VfyxS10L8");
	dpp::embed embed = dpp::embed().
		set_color(dpp::colors::sti_blue).
		set_author("Super Broadcast from", "https://discord.com", "https://cdn.growtopia.tech/items/2480.png").
		add_field(
			"Username",
			player
		).
		add_field(
			"Message",
			text
		).
		add_field(
			"in World",
			world
		).
		set_footer(dpp::embed_footer().set_text("©Growhoshi || Ritshu#0001").set_icon("https://cdn.growtopia.tech/items/2480.png")).
		set_timestamp(time(0));
	bot.execute_webhook_sync(wh, dpp::message().add_embed(embed));
}

void send_Trade(string name, string tradeitem1, string name2, string tradeitem2) {
	srand(time(0));
	dpp::cluster bot("");
	bot.on_log(dpp::utility::cout_logger());
	dpp::webhook wh("https://discord.com/api/webhooks/1056024080438005870/xIdfkpq4b34i3a_kaCY-mDBZJAtWiyx3-cnz87qqU54KpILDVmCss2b01NKEbQnSnQ7x");
	dpp::embed embed = dpp::embed().
		set_color(dpp::colors::moon_yellow).
		set_author("Trade Logs", "https://discord.com", "https://cdn.growtopia.tech/items/32.png").
		add_field(
			"Player",
			name
		).
		add_field(
			"Traded",
			tradeitem1
		).
		add_field(
			"Player",
			name2
		).
		add_field(
			"Traded",
			tradeitem2
		).
		set_footer(dpp::embed_footer().set_text("©Growhoshi || Ritshu#0001").set_icon("https://cdn.growtopia.tech/items/3902.png")).
		set_timestamp(time(0));
	bot.execute_webhook_sync(wh, dpp::message().add_embed(embed));
}

void send_Punishment(string p_username, string p_reason, string p_punisher, string p_duration) {
	srand(time(0));
	string random_str = RandomString(20);
	dpp::cluster bot("");
	bot.on_log(dpp::utility::cout_logger());
	dpp::webhook wh("https://discord.com/api/webhooks/1056024229025419336/6i41FrIHp1hXS-qOP5qxbTYmzaSNDSuDw_42MqLKu-NIZn4TrznnonUtaX_m2Smx428X");
	dpp::embed embed = dpp::embed().
		set_color(dpp::colors::rallyart_crimson).
		set_title("Punishments Logs").
		add_field(
			"Username",
			p_username
		).
		add_field(
			"Reason",
			p_reason
		).
		add_field(
			"Punished by",
			p_punisher
		).
		add_field(
			"Duration",
			p_duration
		).
		set_footer(dpp::embed_footer().set_text("©Growhoshi. For more info, message to person, who punished.")).
		set_timestamp(time(0));
	bot.execute_webhook_sync(wh, dpp::message().add_embed(embed));
}